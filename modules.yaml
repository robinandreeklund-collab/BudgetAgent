modules:
  import_bank_data:
    description: Läser in bankutdrag från olika format (CSV, Excel, JSON)
    yaml_config: [settings_panel.yaml]
    functions:
      - name: load_file
        input: path: str
        output: DataFrame
        description: Läser in filen och returnerar rådata
      - name: detect_format
        input: data: DataFrame
        output: str
        description: Identifierar bankformat
      - name: normalize_columns
        input: data: DataFrame, format: str
        output: DataFrame
        description: Standardiserar kolumnnamn

  parse_transactions:
    description: Extraherar och strukturerar transaktioner från rådata
    functions:
      - name: parse_dates
        input: data: DataFrame
        output: DataFrame
        description: Konverterar datum till ISO-format
      - name: clean_descriptions
        input: data: DataFrame
        output: DataFrame
        description: Rensar textfält
      - name: extract_metadata
        input: data: DataFrame
        output: DataFrame
        description: Identifierar butik, plats, kategori

  categorize_expenses:
    description: Kategoriserar transaktioner automatiskt eller manuellt
    yaml_config: [categorization_rules.yaml]
    functions:
      - name: auto_categorize
        input: data: DataFrame, rules: dict
        output: DataFrame
        description: Automatisk kategorisering
      - name: manual_override
        input: data: DataFrame, overrides: dict
        output: DataFrame
        description: Manuell justering
      - name: update_category_map
        input: new_rules: dict
        output: None
        description: Uppdaterar regelbas

  parse_pdf_bills:
    description: Extraherar fakturor från PDF och konverterar till YAML-format
    yaml_output: [upcoming_bills.yaml]
    dependencies: [pdfplumber, pytesseract, pdf2image, re]
    functions:
      - name: extract_text_from_pdf
        input: file_path: str
        output: str
        description: Läser text från PDF
      - name: extract_bills_from_text
        input: raw_text: str
        output: List[dict]
        description: Identifierar fakturablock och extraherar fält
      - name: validate_bill_structure
        input: bill: dict
        output: bool
        description: Säkerställer korrekt format
      - name: write_bills_to_yaml
        input: bills: List[dict], yaml_path: str
        output: None
        description: Skriver fakturor till YAML
      - name: extract_text_with_ocr
        input: file_path: str
        output: str
        description: OCR för bildbaserade fakturor

  upcoming_bills:
    description: Hanterar framtida fakturor med belopp, datum och kategori
    yaml_config: [upcoming_bills.yaml]
    functions:
      - name: add_bill
        input: name, amount, due_date, category
        output: None
        description: Lägger till faktura
      - name: get_upcoming_bills
        input: month: str
        output: List[dict]
        description: Hämtar fakturor för månad
      - name: validate_bill_format
        input: bill: dict
        output: bool
        description: Validerar fakturapost

  income_tracker:
    description: Registrerar inkomster per person
    yaml_config: [income_tracker.yaml]
    functions:
      - name: add_income
        input: person, source, amount, date, recurring
        output: None
        description: Lägger till inkomst
      - name: get_monthly_income
        input: person, month
        output: float
        description: Summerar inkomster
      - name: forecast_income
        input: months: int
        output: dict
        description: Prognos för framtida inkomster

  net_balance_splitter:
    description: Fördelar kvarvarande pengar efter utgifter
    yaml_config: [net_balance_splitter.yaml]
    functions:
      - name: split_balance
        input: total_income: dict, total_expenses: dict, rule: str
        output: dict
        description: Fördelar saldo
      - name: apply_custom_ratio
        input: ratio: dict
        output: None
        description: Anpassad fördelning
      - name: calculate_shared_vs_individual
        input: expenses: DataFrame
        output: dict
        description: Separera gemensamma och individuella utgifter

  forecast_engine:
    description: Simulerar framtida saldo baserat på historik och planerade poster
    yaml_config: [forecast_engine.yaml]
    functions:
      - name: calculate_historical_average
        input: data: DataFrame, window: int
        output: dict
        description: Genomsnitt per kategori
      - name: inject_future_income_and_bills
        input: income: list, bills: list
        output: dict
        description: Skapar kassaflöde
      - name: simulate_monthly_balance
        input: months: int
        output: DataFrame
        description: Saldo per månad
      - name: compare_scenarios
        input: scenarios: list
        output: dict
        description: Jämför framtidsscenarier

  alerts_and_insights:
    description: Genererar varningar och insikter baserat på forecast och regler
    yaml_config: [settings_panel.yaml]
    functions:
      - name: check_budget_thresholds
        input: data: DataFrame, thresholds: dict
        output: List[str]
        description: Identifierar överskridna gränser
      - name: generate_insights
        input: data: DataFrame
        output: List[str]
        description: Skapar insikter
      - name: recommend_actions
        input: insight: str
        output: str
        description: Ger rekommendationer

  dashboard_ui:
    description: Dash-gränssnitt för visualisering, inmatning och agentinteraktion
    yaml_config: [settings_panel.yaml, forecast_engine.yaml, income_tracker.yaml]
    functions:
      - name: render_dashboard
        input: null
        output: null
        description: Startar Dash-app
      - name: update_forecast_graph
        input: data: DataFrame
        output: Dash component
        description: Visualiserar saldo
      - name: input_panel
        input: null
        output: Dash layout
        description: Formulär för inmatning
      - name: agent_query_interface
        input: null
        output: Dash layout
        description: Frågefält för interaktiv analys

  settings_panel:
    description: Hanterar alla inställningar via sliders, dropdowns och toggles
    yaml_config: [settings_panel.yaml]
    functions:
      - name: load_settings
        input: yaml_path: str
        output: dict
        description: Läser in inställningar
      - name: render_controls
        input: settings: dict
        output: Dash layout
        description: Skapar UI-komponenter
      - name: update_settings
        input: new_values: dict
        output: None
        description: Sparar ändringar till YAML
    yaml: settings_panel.yaml

  parse_pdf_bills:
    description: Extraherar fakturainformation från PDF-filer och konverterar till YAML-format för kommande fakturor
    functions:
      - name: extract_text_from_pdf
        input: file_path: str
        output: str
        description: Läser text från PDF-sidor och returnerar som sträng
      - name: extract_bills_from_text
        input: raw_text: str
        output: List[dict]
        description: Identifierar fakturor i texten via regex eller heuristik
      - name: validate_bill_structure
        input: bill: dict
        output: bool
        description: Säkerställer att varje faktura har korrekt format och fält
      - name: write_bills_to_yaml
        input: bills: List[dict], yaml_path: str
        output: None
        description: Lägger till extraherade fakturor i upcoming_bills.yaml
      - name: extract_text_with_ocr
        input: file_path: str
        output: str
        description: (Valbar) Använder OCR för att tolka bildbaserade fakturor
    yaml: parse_pdf_bills.yaml
    dependencies:
      - pdfplumber
      - pytesseract (valbart för OCR)
      - pdf2image (valbart för bildbaserade fakturor)
